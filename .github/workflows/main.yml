# workflow 이름 지정
name: test

# 이 workflow가 언제 실행될 것인가?
on:
  # 특정 브랜치가 Push 되는 경우 실행
  #push:
    #branches:
      
  # 특정 브랜치가 Pull Request 되는 경우 실행
  #pull_request:
    #branches:
      #- "**"

  # 수동으로 workflow 실행 가능 -> 자동 실행보다는 수동으로 빌드/배포 실행하는게 더 안전?
  workflow_dispatch:

# 한 workflow는 한 개 또는 여러 개의 jobs를 설정할 수 있다.
jobs:
  build:
    # 해당 workflow를 어떤 OS 환경에서 실행할 것인가?
    runs-on: ubuntu-latest
 #   env: 
 #     working-directory: ./1-nServer

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # 깃허브가 제공하는 워크스페이스(이 workflow를 실행하는 공간)에서 내 저장소가 위치한 곳으로 이동
      - name: Checkout
        uses: actions/checkout@v3
        
      # 자바 설치 및 gradlew에 실행 권한 부여 및 프로젝트 build
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew build -Djasypt.encryptor.password=${{ secrets.JASYPT_PASSWORD }} -Dspring.profiles.active=dev
        shell: bash

      # 현재 workflow를 실행시키는 커밋의 해쉬값
      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

      # AWS 설정
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # copy로 S3에 업로드
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://playkuround-server-deploy/$GITHUB_SHA.zip

      - name: Code Deploy
        run: aws deploy create-deployment --application-name playkuround-server-deploy --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name develop --s3-location bucket=playkuround-server-deploy,bundleType=zip,key=$GITHUB_SHA.zip
