name: Spring Code deploy

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Setup redis
        uses: shogo82148/actions-setup-redis@v1.30.1
        with:
          redis-version: 6.2.0
          redis-port: 6379
          auto-start: true
        
      - name: injection application.yml
        run: |
          touch src/main/resources/application.yml
          touch src/main/resources/application-test.yml
          echo "${{ secrets.YML }}" > src/main/resources/application.yml
          echo "${{ secrets.TEST_YML }}" > src/main/resources/application-test.yml
        shell: bash
  
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        
      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Deliver File
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "build/libs/*.jar"
          target: "source"
          rm: true

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            SOURCE_DIR=source/build/libs
            FILE_NAME=`find $SOURCE_DIR/*.jar -printf "%f\n"`
            PID=`ps -ef | grep occupying | grep sudo | grep -v "bash -c" | awk '{print $2}'`

            if [ -z "$PID" ]; then
                    echo "#### THERE IS NO PROCESS ####"
            else
                    echo "#### KILL $PID ####"
                    sudo kill $PID
            fi

            echo "#### RUN $SOURCE_DIR/$FILE_NAME ####"

            sudo nohup java -jar $SOURCE_DIR/$FILE_NAME 1>/stdout.out 2>stderr.out 2>&1 &
